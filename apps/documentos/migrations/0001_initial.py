# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2019-04-23 18:38
from __future__ import unicode_literals

import apps.documentos.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Anotacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_done', models.BooleanField(default=False)),
                ('anotador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anotador', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Anotaciones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anotacion_finalizada', models.BooleanField(default=False, verbose_name='Anotaci\xf3n finalizada?')),
                ('anotador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='anotacion', to=settings.AUTH_USER_MODEL, verbose_name='Usuario anotador')),
            ],
        ),
        migrations.CreateModel(
            name='ArgumentacionParrafo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calificacion', models.PositiveSmallIntegerField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Fecha de la evaluacion')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='argumento', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Clasificacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, default='', max_length=60, null=True)),
                ('nombre_publico', models.CharField(blank=True, default='', max_length=60, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_asunto', models.CharField(blank=True, default='', max_length=60)),
                ('materia', models.CharField(blank=True, default='', max_length=60)),
                ('organo_jurisdiccional', models.CharField(blank=True, default='', max_length=60)),
                ('texto_html', models.TextField(blank=True, default='', max_length=300000, null=True)),
                ('archivo', models.FileField(upload_to=apps.documentos.models.get_documento_path)),
                ('juez', models.CharField(blank=True, default='', max_length=80)),
                ('secretario', models.CharField(blank=True, default='', max_length=80)),
                ('preambulo', models.CharField(blank=True, default='', max_length=80)),
                ('resultandos', models.CharField(blank=True, default='', max_length=80)),
                ('considerandos', models.CharField(blank=True, default='', max_length=80)),
                ('puntos_resolutivos', models.CharField(blank=True, default='', max_length=80)),
                ('nombre_publico', models.CharField(blank=True, default='', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='DummyParrafo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Etiquetado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_etiquetado', models.DateTimeField(auto_now=True, verbose_name='Fecha de etiquetado')),
            ],
        ),
        migrations.CreateModel(
            name='Etiquetas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etiqueta', models.CharField(max_length=60, unique=True, verbose_name='Etiqueta')),
                ('descripcion', models.TextField(max_length=3000, verbose_name='Descripci\xf3n')),
                ('ejemplos', models.TextField(max_length=3000, verbose_name='Ejemplos')),
                ('visible_anotadores', models.BooleanField(default=True, verbose_name='Visible para anotadores?')),
                ('propuesta', models.BooleanField(default=False, verbose_name='Etiqueta propuesta?')),
                ('propuesta_por', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='propuestas', to=settings.AUTH_USER_MODEL, verbose_name='Propuesta por usuario')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluacionParrafo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Fecha de creacion/actualizacion de la oracion')),
                ('tipo_anotacion', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('texto', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluacion_parrado', to=settings.AUTH_USER_MODEL)),
                ('clasificacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documentos.Clasificacion')),
            ],
        ),
        migrations.CreateModel(
            name='Leyes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_oficial', models.CharField(max_length=60, unique=True, verbose_name='Nombre Oficial')),
                ('identificador', models.CharField(max_length=60, unique=True, verbose_name='Identificador')),
                ('fecha_publicacion', models.DateField(verbose_name='Fecha de publicaci\xf3n')),
                ('fecha_ultima_modificacion', models.DateField(verbose_name='Fecha de \xfaltima modificaci\xf3n')),
                ('captura_parrafos_finalizada', models.BooleanField(default=False, verbose_name='Captura finalizada?')),
                ('visible_anotadores', models.BooleanField(default=True, verbose_name='Visible para anotadores?')),
                ('archivo_docx', models.FileField(upload_to='media/DOCXs', verbose_name='Archivo DOCX')),
                ('archivo_pdf', models.FileField(upload_to='media/PDFs', verbose_name='Archivo PDF')),
                ('capturador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ley', to=settings.AUTH_USER_MODEL, verbose_name='Usuario encargado de captura')),
            ],
        ),
        migrations.CreateModel(
            name='Oracion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_anotacion', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('texto', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('is_correcta', models.BooleanField(default=True)),
                ('anotacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oraciones', to='documentos.Anotacion')),
                ('clasificacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documentos.Clasificacion')),
                ('evaluado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etiquetador', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Palabras',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_palabra', models.PositiveIntegerField(verbose_name='N\xfamero de palabra')),
                ('palabra', models.CharField(max_length=60, verbose_name='Palabra')),
                ('anotacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='palabras', to='documentos.Anotaciones', verbose_name='Anotaci\xf3n')),
                ('grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grupo', to='documentos.Etiquetado', verbose_name='Grupo etiquetada')),
            ],
        ),
        migrations.CreateModel(
            name='Parrafo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_inicial', models.IntegerField(blank=True, help_text='Indice de inicio delas palabras', null=True)),
                ('numero_final', models.IntegerField(blank=True, help_text='Indice de inicio delas palabras', null=True)),
                ('texto', django.contrib.postgres.fields.jsonb.JSONField()),
                ('ha_sido_evaluado', models.BooleanField(default=False, help_text='Marcar cuando un parrafo ya ha sido evaluado')),
                ('tipo', models.CharField(blank=True, help_text='Saber si es considerando, resultando, resuelve, etc.', max_length=40, null=True)),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parrafo', to='documentos.Documento')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Parrafos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=60, verbose_name='T\xedtulo')),
                ('capitulo', models.CharField(max_length=60, verbose_name='Cap\xedtulo')),
                ('base', models.CharField(max_length=60, verbose_name='Base')),
                ('apartado', models.CharField(max_length=60, verbose_name='Apartado')),
                ('articulo', models.CharField(max_length=60, verbose_name='Art\xedculo')),
                ('fraccion', models.CharField(max_length=60, verbose_name='Fracci\xf3n')),
                ('inciso', models.CharField(max_length=60, verbose_name='Inciso')),
                ('parrafo', models.PositiveIntegerField(verbose_name='N\xfamero de P\xe1rrafo')),
                ('texto', models.TextField(max_length=100000, verbose_name='Texto')),
                ('fecha_registro', models.DateTimeField(verbose_name='Fecha de registro')),
                ('fecha_ultima_anotacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de \xfaltima anotaci\xf3n')),
                ('capturador', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parrafo', to=settings.AUTH_USER_MODEL, verbose_name='Usuario encargado de captura')),
                ('ley', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parrafo', to='documentos.Leyes', verbose_name='Ley')),
            ],
        ),
        migrations.CreateModel(
            name='Revisiones',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acuerdo', models.NullBooleanField(verbose_name='De acuerdo con el etiquetado?')),
                ('revision_finalizada', models.BooleanField(default=False, verbose_name='Revisi\xf3n finalizada?')),
                ('fecha_revision', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de revision')),
                ('etiquetado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revision', to='documentos.Etiquetado', verbose_name='Etiquetado')),
                ('revisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revision', to=settings.AUTH_USER_MODEL, verbose_name='Usuario revisor')),
            ],
        ),
        migrations.CreateModel(
            name='TAG',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.CharField(blank=True, default='', max_length=1000, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subtag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='documentos.TAG')),
            ],
        ),
        migrations.CreateModel(
            name='TAGPersonal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(blank=True, max_length=50, null=True)),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documentos.TAG')),
            ],
        ),
        migrations.AddField(
            model_name='oracion',
            name='parrafo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='oraciones', to='documentos.Parrafo'),
        ),
        migrations.AddField(
            model_name='oracion',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, related_name='oraciones', to='documentos.TAG'),
        ),
        migrations.AddField(
            model_name='evaluacionparrafo',
            name='oracion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluacion', to='documentos.Oracion'),
        ),
        migrations.AddField(
            model_name='evaluacionparrafo',
            name='tags',
            field=models.ManyToManyField(blank=True, null=True, related_name='tags_evaluacion', to='documentos.TAG'),
        ),
        migrations.AddField(
            model_name='etiquetado',
            name='etiqueta_asignada',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etiquetado', to='documentos.Etiquetas', verbose_name='Etiqueta asignada'),
        ),
        migrations.AddField(
            model_name='argumentacionparrafo',
            name='parrafo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='argumentacion', to='documentos.Parrafo'),
        ),
        migrations.AddField(
            model_name='anotaciones',
            name='parrafo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anotacion', to='documentos.Parrafos', unique=True, verbose_name='P\xe1rrafo'),
        ),
        migrations.AddField(
            model_name='anotacion',
            name='documento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anotacion', to='documentos.Documento'),
        ),
        migrations.AddField(
            model_name='anotacion',
            name='revisor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='revisor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='revisiones',
            unique_together=set([('etiquetado', 'revisor')]),
        ),
        migrations.AlterUniqueTogether(
            name='parrafos',
            unique_together=set([('ley', 'titulo', 'capitulo', 'base', 'apartado', 'fraccion', 'inciso', 'parrafo')]),
        ),
        migrations.AlterUniqueTogether(
            name='palabras',
            unique_together=set([('anotacion', 'num_palabra')]),
        ),
    ]
